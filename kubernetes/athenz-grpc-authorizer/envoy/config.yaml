---
admin:
  access_log:
    - name: access_log_file
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
        path: "/dev/stdout"
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 9901
node:
  id: envoy-0
  cluster: envoy-cluster
static_resources:
  listeners:
    - name: localhost_listener
      address:
        socket_address:
          protocol: TCP
          address: ::FFFF:127.0.0.1
          ipv4_compat: true
          port_value: 8080
      filter_chains: &localhost_filter_chains
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: localhost_proxy_prefix
                access_log: &access_log
                  - name: envoy.access_loggers.stdout
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                route_config: &localhost_route_config
                  name: localhost_proxy_route
                  virtual_hosts:
                    - name: localhost_proxy_hosts
                      domains:
                        # Only a single wildcard domain is permitted in route https_proxy_route
                        - "*"
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          check_settings:
                            context_extensions:
                              virtual_host: localhost_proxy_hosts
                      routes: &localhost_routes
                        - match:
                            path_separated_prefix: "/status"
                          direct_response:
                            status: 200
                            body:
                              inline_string: "This is server ingress proxy."
                          response_headers_to_add:
                            - header:
                                key: x-athenz-method
                                value: "%REQ(:METHOD)%"
                            - header:
                                key: x-athenz-path
                                value: "%REQ(:PATH)%"
                          typed_per_filter_config: &ext_authz_disabled
                            envoy.filters.http.ext_authz.authorization: &ext_authz_authorizationsidecar_disabled
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            prefix: "/health"
                          route:
                            cluster: opa
                          typed_per_filter_config: *ext_authz_disabled
                        - match:
                            prefix: "/v0/data"
                          route:
                            cluster: opa
                          typed_per_filter_config: &ext_authz_disabled
                            envoy.filters.http.ext_authz.token: &ext_authz_tokensidecar_disabled
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                            envoy.filters.http.ext_authz.authorization: &ext_authz_authorizationsidecar_disabled
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            path_separated_prefix: "/server"
                          route:
                            cluster: echoserver
                            prefix_rewrite: "/echoserver"
                            auto_host_rewrite: true
                          request_headers_to_add: &request_headers_to_add
                            - header:
                                key: x-athenz-sni
                                value: "%REQUESTED_SERVER_NAME%"
                            - header:
                                key: x-athenz-certificate-subject
                                value: "%DOWNSTREAM_PEER_SUBJECT%"
                            - header:
                                key: x-athenz-certificate-issuer
                                value: "%DOWNSTREAM_PEER_ISSUER%"
                            - header:
                                key: x-athenz-certificate-san-uri
                                value: "%DOWNSTREAM_PEER_URI_SAN%"
                            - header:
                                key: x-athenz-certificate-v-start
                                value: "%DOWNSTREAM_PEER_CERT_V_START%"
                            - header:
                                key: x-athenz-certificate-v-end
                                value: "%DOWNSTREAM_PEER_CERT_V_END%"
                            - header:
                                key: x-athenz-certificate
                                value: "%DOWNSTREAM_PEER_CERT%"
                        - match:
                            prefix: "/echoserver"
                          route:
                            cluster: echoserver
                          request_headers_to_add: *request_headers_to_add
                          typed_per_filter_config: *ext_authz_disabled
                        - match:
                            prefix: "/"
                          route:
                            cluster: envoy_admin
                          typed_per_filter_config: *ext_authz_disabled
                http_filters: &localhost_http_filters
                  - name: envoy.filters.http.ext_authz.authorization
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                      # https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/grpc_service.proto#envoy-v3-api-msg-config-core-v3-grpcservice
                      #grpc_service:
                      #  google_grpc: # or envoy_grpc
                      #  target_uri: "127.0.0.1:9191"
                      # https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/ext_authz/v3/ext_authz.proto.html#extensions-filters-http-ext-authz-v3-httpservice
                      transport_api_version: V3
                      with_request_body:
                        max_request_bytes: 8192
                        allow_partial_message: true
                      failure_mode_allow: false
                      grpc_service:
                        envoy_grpc:
                          cluster_name: opa-envoy
                        timeout: 0.5s
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
    #- name: localhost_listener_v4
    #  address:
    #    socket_address:
    #      protocol: TCP
    #      address: 127.0.0.1
    #      port_value: 8080
    #  filter_chains: *localhost_filter_chains
    #- name: localhost_listener_v6
    #  address:
    #    socket_address:
    #      protocol: TCP
    #      address: ::1
    #      port_value: 8080
    #  filter_chains: *localhost_filter_chains
  clusters:
    - name: envoy_admin
      connect_timeout: 0.25s
      type: STATIC # LOGICAL_DNS or STATIC
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: envoy_admin
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 9901
    - name: envoy_localhost
      connect_timeout: 0.25s
      type: STATIC # LOGICAL_DNS or STATIC
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: envoy_localhost
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 8080
    - name: opa
      connect_timeout: 0.25s
      type: STATIC # LOGICAL_DNS or STATIC
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: opa
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 8181
    - name: opa-envoy
      connect_timeout: 0.25s
      type: STATIC # LOGICAL_DNS or STATIC
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: opa-envoy
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 9191
    - name: echoserver
      connect_timeout: 0.25s
      type: STATIC # LOGICAL_DNS or STATIC
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: echoserver
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 3000
