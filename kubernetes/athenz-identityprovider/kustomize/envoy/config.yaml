---
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 9901
node:
  id: envoy-0
  cluster: envoy-cluster
static_resources:
  listeners:
    - name: localhost_listener_v4
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 8080
      filter_chains: &localhost_filter_chains
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: localhost_proxy_prefix
                access_log: &access_log
                  - name: envoy.access_loggers.stdout
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                route_config:
                  name: localhost_proxy_route
                  virtual_hosts:
                    - name: localhost_proxy_hosts
                      domains:
                        # Only a single wildcard domain is permitted in route https_proxy_route
                        - "*"
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          check_settings:
                            context_extensions:
                              virtual_host: localhost_proxy_hosts
                      routes: &localhost_routes
                        - match:
                            path_separated_prefix: "/helloworld"
                          direct_response:
                            status: 200
                            body:
                              inline_string: "Hello, World!"
                          response_headers_to_add:
                            - header:
                                key: x-athenz-action
                                value: "%REQ(:METHOD)%"
                            - header:
                                key: x-athenz-resource
                                value: "%REQ(:PATH)%"
                          typed_per_filter_config: &ext_authz_disabled
                            envoy.filters.http.ext_authz.token: &ext_authz_tokensidecar_disabled
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                            envoy.filters.http.ext_authz.authorization: &ext_authz_authorizationsidecar_disabled
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            path_separated_prefix: "/zms/v1"
                          route:
                            cluster: zms
                          typed_per_filter_config: *ext_authz_disabled
                        - match:
                            path_separated_prefix: "/zts/v1"
                          route:
                            cluster: zts
                          typed_per_filter_config: *ext_authz_disabled
                        - match:
                            prefix: "/v1/data"
                          route:
                            cluster: opa
                          typed_per_filter_config: *ext_authz_disabled
                        - match:
                            path_separated_prefix: "/token"
                          route:
                            cluster: token-sidecar
                            auto_host_rewrite: true
                          typed_per_filter_config: *ext_authz_disabled
                        - match:
                            path_separated_prefix: "/authz"
                          route:
                            cluster: authorization-sidecar
                            auto_host_rewrite: true
                          typed_per_filter_config: *ext_authz_disabled
                        - match:
                            path_separated_prefix: "/client2server"
                          route:
                            cluster: envoy_localhost
                            prefix_rewrite: "/server"
                            auto_host_rewrite: true
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz.authorization: *ext_authz_authorizationsidecar_disabled
                        - match:
                            path_separated_prefix: "/client"
                          route:
                            cluster: echoserver
                            auto_host_rewrite: true
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz.authorization: *ext_authz_authorizationsidecar_disabled
                        - match:
                            path_separated_prefix: "/server"
                          route:
                            cluster: envoy_localhost
                            prefix_rewrite: "/helloworld"
                            auto_host_rewrite: true
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz.token: *ext_authz_tokensidecar_disabled
                        - match:
                            prefix: "/"
                          route:
                            cluster: envoy_admin
                          typed_per_filter_config: *ext_authz_disabled
                http_filters:
                  - name: envoy.filters.http.ext_authz.authorization
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                      # https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/grpc_service.proto#envoy-v3-api-msg-config-core-v3-grpcservice
                      #grpc_service:
                      #  google_grpc: # or envoy_grpc
                      #  target_uri: "127.0.0.1:9191"
                      # https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/ext_authz/v3/ext_authz.proto.html#extensions-filters-http-ext-authz-v3-httpservice
                      http_service:
                        server_uri:
                          uri: authorization-sidecar
                          cluster: authorization-sidecar
                          timeout: 5s
                        authorization_request:
                          headers_to_add:
                            - key: x-athenz-proxy
                              value: "egress"
                            - key: x-athenz-action
                              value: "%REQ(:METHOD)%"
                            - key: x-athenz-resource
                              value: "%REQ(:PATH)%"
                        authorization_response:
                          allowed_upstream_headers:
                            patterns:
                              - exact: athenz-role-auth
                              - exact: authorization
                      with_request_body:
                        max_request_bytes: 1024
                  # Authorization could also be done with type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                  # https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/jwt_authn/v3/config.proto.html
                  # https://developer.mamezou-tech.com/blogs/2022/02/20/envoy-authz/
                  - name: envoy.filters.http.ext_authz.token
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                      # https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/grpc_service.proto#envoy-v3-api-msg-config-core-v3-grpcservice
                      #grpc_service:
                      #  google_grpc: # or envoy_grpc
                      #  target_uri: "127.0.0.1:9191"
                      # https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/ext_authz/v3/ext_authz.proto.html#extensions-filters-http-ext-authz-v3-httpservice
                      http_service:
                        server_uri:
                          uri: token-sidecar
                          cluster: token-sidecar
                          timeout: 5s
                        authorization_request:
                          headers_to_add:
                            - key: x-athenz-proxy
                              value: "egress"
                            - key: x-athenz-domain
                              value: "athenz"
                            - key: x-athenz-role
                              value: "envoy"
                        authorization_response:
                          allowed_upstream_headers:
                            patterns:
                              - exact: athenz-role-auth
                              - exact: authorization
                      with_request_body:
                        max_request_bytes: 1024
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
    - name: localhost_listener_v6
      address:
        socket_address:
          protocol: TCP
          address: ::1
          port_value: 8080
      filter_chains: *localhost_filter_chains
    - name: https_listener
      address:
        socket_address:
          protocol: TCP
          address: ::FFFF:0.0.0.0
          ipv4_compat: true
          port_value: 443
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: https_proxy_prefix
                access_log: *access_log
                route_config:
                  name: https_proxy_route
                  virtual_hosts:
                    - name: https_proxy_hosts
                      domains:
                        # Only a single wildcard domain is permitted in route https_proxy_route
                        - "*"
                      routes:
                        - match:
                            prefix: "/health"
                          route:
                            cluster: opa
                        - match:
                            prefix: "/v0/data/identityprovider"
                          route:
                            cluster: opa
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificate_sds_secret_configs: &tls_certificate_sds_secret_configs
                  name: tls_sds
                  sds_config:
                    path: /etc/envoy/sds_tls_certificate.yaml
                    resource_api_version: V3
  clusters:
    - name: zms
      connect_timeout: 0.25s
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: zms
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: athenz-zms-server.athenz
                      port_value: 4443
      transport_socket: &transport_socket
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          common_tls_context:
            tls_certificate_sds_secret_configs: *tls_certificate_sds_secret_configs
    - name: zts
      connect_timeout: 0.25s
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: zts
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: athenz-zts-server.athenz
                      port_value: 4443
      transport_socket: *transport_socket
    - name: token-sidecar
      connect_timeout: 5s
      type: STATIC
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: token-sidecar
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 8180
    - name: authorization-sidecar
      connect_timeout: 5s
      type: STATIC
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: authorization-sidecar
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 8280
    - name: envoy_admin
      connect_timeout: 0.25s
      type: STATIC # LOGICAL_DNS or STATIC
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: envoy_admin
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 9901
    - name: envoy_localhost
      connect_timeout: 0.25s
      type: STATIC # LOGICAL_DNS or STATIC
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: envoy_localhost
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 8080
    - name: opa
      connect_timeout: 0.25s
      type: STATIC # LOGICAL_DNS or STATIC
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: opa
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 8181
    - name: echoserver
      connect_timeout: 0.25s
      type: STATIC # LOGICAL_DNS or STATIC
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: echoserver
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 3000
